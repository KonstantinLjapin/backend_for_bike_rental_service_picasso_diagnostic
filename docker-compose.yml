version: '3.3'

services:
  django_api:
    build: .
    env_file:
      - ./.env
    stop_signal: SIGINT
    container_name: django_api
    command: bash -c "sleep 3s;
      python bike_api/manage.py makemigrations;
      python bike_api/manage.py migrate;
      python bike_api/manage.py createsuperuser --noinput;
      python bike_api/manage.py runserver 0.0.0.0:8000;"
    volumes:
      - ./dump/app:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    restart: always
    volumes:
      - ./dump/redis:/data

  db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:15.0-alpine
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
    env_file:
      - ./.env
    volumes:
      - ./dump/postgres_db/postgres/postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped